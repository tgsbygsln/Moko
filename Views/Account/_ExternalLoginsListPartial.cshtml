@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject IAuthenticationSchemeProvider SchemeProvider

@model AirFastNew.Models.ExternalLoginListViewModel

<h4>Use another service to log in.</h4>
<hr />

@{
    var loginProviders = await SignInManager.GetExternalAuthenticationSchemesAsync();
    var externalLogins = loginProviders.Where(p => !string.IsNullOrEmpty(p.DisplayName)).ToList();

    if (!externalLogins.Any())
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://learn.microsoft.com/en-us/aspnet/core/security/authentication/social/?view=aspnetcore-8.0">this article</a>
                for details on setting up this ASP.NET Core application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        <form asp-controller="Account" asp-action="ExternalLogin" method="post">
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (var provider in loginProviders)
                    {
                        <button type="submit" class="btn btn-outline-dark"
                                name="provider" value="@provider.Name"
                                title="Log in using your @provider.DisplayName account">
                            @provider.DisplayName
                        </button>
                    }
                </p>
            </div>
        </form>
    }
}