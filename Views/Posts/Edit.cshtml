@model AirFastNew.Models.Post

@{
    ViewBag.Title = "Edit Post";
}

<div class="toolbar py-5 py-lg-15" id="kt_toolbar">
    <div id="kt_toolbar_container" class="container-xxl d-flex flex-stack flex-wrap">
        <div class="page-title d-flex flex-column me-3"></div>
    </div>
</div>

<div class="card mb-5 mb-xl-8">
    <div class="card-header border-0 pt-5">
        <h3 class="card-title align-items-start flex-column">
            <span class="card-label fw-bolder fs-3 mb-1">–ó–∞—Å–∞—Ö</span>
        </h3>
    </div>

    <div class="card-body pt-3">
        @using (Html.BeginForm("Edit", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            <div class="row g-9 mb-8">
                <!-- üìç Location -->
                <div class="col-md-6 fv-row">
                    <label class="required fs-6 fw-semibold mb-2">–ë–∞–π—Ä—à–∏–ª</label>
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control form-control-solid", required = "required" })
                </div>

                <!-- üí∞ Price -->
                <div class="col-md-6 fv-row">
                    <label class="required fs-6 fw-semibold mb-2">“Æ–Ω—ç (‚ÇÆ)</label>
                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control form-control-solid", required = "required", type = "number", min = "0", step = "1000" })
                </div>
            </div>

            <div class="row g-9 mb-8">
                <!-- üìè Size -->
                <div class="col-md-6 fv-row">
                    <label class="required fs-6 fw-semibold mb-2">–•—ç–º–∂—ç—ç (m¬≤)</label>
                    @Html.TextBoxFor(model => model.SquareMeters, new { @class = "form-control form-control-solid", required = "required", type = "number", min = "1", step = "0.1" })
                </div>

                <!-- üè° Condition -->
                <div class="col-md-6 fv-row">
                    <label class="required fs-6 fw-semibold mb-2">–¢”©–ª”©–≤</label>
                    @Html.DropDownListFor(model => model.Condition, new SelectList(new[]
                    {
                        new { Value = "New", Text = "–®–∏–Ω—ç" },
                        new { Value = "Good", Text = "–•—É—É—á–∏–Ω" },
                        new { Value = "Average", Text = "–ó–∞—Å–≤–∞—Ä—Ç–∞–π" },
                        new { Value = "Old", Text = "–ó–∞—Å–≤–∞—Ä —Ö–∏–π—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π" }
                    }, "Value", "Text", Model.Condition), "Select Condition", new { @class = "form-select form-select-solid", required = "required" })
                </div>
            </div>

            <!-- üè∑Ô∏è Post Type (Rent / Sale) -->
            <div class="d-flex flex-column mb-8 fv-row">
                <label class="required fs-6 fw-semibold mb-2">–ó–∞—Ä—ã–Ω —Ç”©—Ä”©–ª</label>
                @Html.DropDownListFor(model => model.PostType, new SelectList(new[]
                {
                    new { Value = "Rent", Text = "–¢“Ø—Ä—ç—ç—Å" },
                    new { Value = "Sale", Text = "–•—É–¥–∞–ª–¥–∞–∞" }
                }, "Value", "Text", Model.PostType), "Select Type", new { @class = "form-select form-select-solid", required = "required" })
            </div>

            <!-- üì∏ Existing Photos -->
            <div class="d-flex flex-column mb-8 fv-row">
                <label class="fs-6 fw-semibold mb-2">–û–¥–æ–æ –±–∞–π–≥–∞–∞ –∑—É—Ä–∞–≥–Ω—É—É–¥:</label>
                @if (Model.PhotoPaths.Any())
                {
                    <div class="d-flex flex-wrap">
                        @for (int i = 0; i < Model.PhotoPaths.Count; i++)
                        {
                            <div class="m-2 position-relative">
                                <img src="@Model.PhotoPaths[i]" alt="Post Image" class="img-fluid rounded mb-3" style="max-width: 150px;" />
                                <label>
                                    <input type="checkbox" name="DeletePhotos" value="@Model.PhotoPaths[i]" />
                                    –£—Å—Ç–≥–∞—Ö
                                </label>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">–ó—É—Ä–∞–≥ –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞</p>
                }
            </div>

            <!-- üì§ Upload New Photos -->
            <div class="d-flex flex-column mb-8 fv-row">
                <label class="fs-6 fw-semibold mb-2">–®–∏–Ω—ç –∑—É—Ä–∞–≥ –æ—Ä—É—É–ª–∞—Ö</label>
                <input type="file" name="NewPhotos" class="form-control form-control-solid" multiple accept="image/*" />
            </div>

            <!-- üèóÔ∏è Upload 3D Model -->
            <div class="d-flex flex-column mb-8 fv-row">
                <label class="fs-6 fw-semibold mb-2">3D –∑–∞–≥–≤–∞—Ä –æ—Ä—É—É–ª–∞—Ö (.glb, .gltf)</label>
                <input type="file" name="Model3DFile" class="form-control form-control-solid" accept=".glb,.gltf" />
                @if (!string.IsNullOrEmpty(Model.Model3DPath))
                {
                    <p class="text-muted mt-2">–û–¥–æ–æ –±–∞–π–≥–∞–∞ –∑–∞–≥–≤–∞—Ä: <a href="@Model.Model3DPath" target="_blank">–®–∏–Ω—ç—á–ª—ç–≥–¥—Å—ç–Ω –∑–∞–≥–≤–∞—Ä —Ö–∞—Ä–∞—Ö</a></p>
                }
            </div>

            <!-- üìå Action Buttons -->
            <div class="text-center">
                <button class="btn btn-primary btn-lg btn-block" onclick="window.history.back();">–ë—É—Ü–∞—Ö</button>
                <button type="submit" class="btn btn-sm" style="color: white; background-color:#0099a8">–•–∞–¥–≥–∞–ª–∞—Ö</button>
            </div>
        }
    </div>
</div>